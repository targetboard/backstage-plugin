name: Release
on:
  push:
    branches: [main]
jobs:
  release:
    runs-on: ubuntu-latest
    environment: release
    permissions:
      contents: write
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }
      - uses: actions/setup-node@v4
        with:
          node-version: 22
          registry-url: https://registry.npmjs.org

      - name: Install dependencies
        run: yarn install --immutable

      # Gate: proceed only if there are unreleased changesets
      - name: Check for unreleased changesets
        id: cs
        shell: bash
        run: |
          OUT=$(npx changeset status 2>&1 || true)
          echo "$OUT"
          if echo "$OUT" | grep -q "No unreleased changesets found"; then
            echo "pending=false" >> "$GITHUB_OUTPUT"
          else
            echo "pending=true" >> "$GITHUB_OUTPUT"
          fi

      # Skip the rest if no unreleased changesets
      - name: No changesets — skipping release
        if: steps.cs.outputs.pending != 'true'
        run: echo "✅ No unreleased changesets. Skipping version/publish."

      # Proceed with release if there are unreleased changesets
      - name: Apply version bumps (Changesets)
        if: steps.cs.outputs.pending == 'true'
        run: yarn changeset version

      # Prove what changed
      - name: Show changes after version
        if: steps.cs.outputs.pending == 'true'
        shell: bash
        run: |
          echo "::group::git status -s"
          git status -s
          echo "::endgroup::"
          echo "::group::git diff --name-only"
          git diff --name-only
          echo "::endgroup::"
          echo "::group::package.json (after version)"
          cat package.json
          echo "::endgroup::"
          # If monorepo, also:
          # cat packages/your-plugin/package.json || true

      # Commit & push the bump NOW (before reset/build)
      - name: Commit version & changelog
        if: steps.cs.outputs.pending == 'true'
        shell: bash
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add -A
          if git diff --cached --quiet; then
            echo "No staged changes to commit."
          else
            ver=$(node -p "require('./package.json').version")
            git commit -m "chore: release v$ver"
            git push
          fi

      # Proceed with build & publish
      - name: Clean dist and install dependencies
        if: steps.cs.outputs.pending == 'true'
        run: yarn reset

      - name: Build
        if: steps.cs.outputs.pending == 'true'
        run: yarn build

      - name: Read version
        if: steps.cs.outputs.pending == 'true'
        id: readver
        shell: bash
        run: |
          VER=$(node -p "require('./package.json').version")
          echo "v=$VER" >> "$GITHUB_OUTPUT"

      # Publish to NPM
      - name: Publish to NPM
        if: steps.cs.outputs.pending == 'true'
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      # Create & push git tag
      - name: Create & push tag
        if: steps.cs.outputs.pending == 'true'
        run: |
          VER="v${{ steps.readver.outputs.v }}"
          if git rev-parse -q --verify "refs/tags/$VER" >/dev/null; then
            echo "Tag $VER already exists, skipping"
          else
            git tag "$VER"
            git push origin "$VER"
          fi

      - name: Create GitHub Release
        if: steps.cs.outputs.pending == 'true'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.readver.outputs.v }}
          name: v${{ steps.readver.outputs.v }}
          body: |
            See CHANGELOG.md for details.
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
